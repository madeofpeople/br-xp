@use '../../scss/abstracts/_colors.scss';
@use '../../scss/abstracts/_center.scss';
@use '../../scss/abstracts/_packdimensions.scss';
@use '../../scss/abstracts/_crosshair.scss';

$trln: 0.5s;
@keyframes rotation {
  from {
    transform: rotate3d(0,0,1, 3deg);
  }
  to {
    transform: rotate3d(0,0,1, -3deg);
  }
}

@keyframes vertical {
  from {
    top: -3px;
  }
  to {
    top: 3px;
  }
}

@keyframes horizontal {
  from {
    left: -3px;
  }
  to {
    left: 3px;
  }
}

@keyframes starburstspin {
  from {
    transform: rotate3d(0, 0, 1, 0);
  }
  50% {
    transform: rotate3d(0, 0, 1, 180deg);
  }
  to {
    transform: rotate3d(0, 0, 1, 360deg);
  }
}

%starburst-animation {
  animation: starburstspin
    linear
    90s
    infinite
    forwards
    running;
}

%floating {
  animation: vertical
    ease-in-out
    1.5s
    infinite
    alternate
    running
    both,
    horizontal
    ease-in-out
    2s
    infinite
    alternate
    running
    both,
    rotate
    ease-in-out
    3s
    infinite
    alternate
    running
    both;
}

%modal--fancy {

  // transition
  transition-timing-function: ease-in;
  transition-property: transform opacity;
  transition-duration: 0.5s;

  .modal {
    background-color: colors.c(rare);
    perspective: 1000px;
    transform-origin: bottom;
    transform-style: preserve-3d;
    transform: translate3d(0, 100vh, 0) scale3d(.23, .23, .23) rotate3d(1, 0, 0, -80deg);
    transition:
      transform $trln cubic-bezier(.54,0,.69,1.31),
      background-color $trln $trln ease-in;

    .title {
      color: #fff;
      text-align: center;
      position: absolute;
      width: 100%;
      transition-property: transform;
      transition-timing-function: cubic-bezier(0.54, 0.52, 0.46, 1);
      transition-duration: 0.75s;
      transform: translate3d(0, -30vh, 0) rotate3d(0, 0, 0, 0);
    }
    .subhead {
      position: absolute;
      width: 100%;
      bottom: 4rem;
      margin-top: 0;
      color: white;
      text-align: center;
    }
    .pack {
      @include center.center;
      position: absolute;
      transform: translate3d( -50%, 150vh, 0) scale3d(1.5, 1.5, 1);
      transition: transform 0.5s cubic-bezier(.2,1.2,.66,1);
    }
  }

  &.opened {
    transform: translate3d(0, 0, 0);
    .modal {
      perspective: 200px;
      transform-origin: bottom;
      transform: translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(1, 0, 0, 0);
      background-color: colors.c(modalbg);
    }
  }

  &.opened.stage-set {

    .title {
      transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, -1.7deg);
    }

    .pack {
      transform: translate3d( -50%, -40%, 0) scale3d(1, 1, 1);
    }

    svg {
      width: 100%;
      height: 100%;
    }

    .starburst_svg__group {

      will-change: transform;

      width: 100%;
      height: 100%;
      position: absolute;
      transform: translate3d(50%, 50%, 0);

      path {
        @extend %starburst-animation;
      }

      path:nth-child(2) {
        animation-duration: 200s;
      }
      path:nth-child(3) {
        animation-duration: 150s;
      }
    }
  }
}

#pack-xp {

  .modal__wrapper {
    @extend %modal--fancy;
  }

  .pack-container {
    width: 100%;
    height: 100%;
    position: absolute;
    @extend %floating;
  }
}
