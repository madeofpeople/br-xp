@use "sass:list";
@use "../../scss/abstracts/reset.scss";
@use "../../scss/abstracts/colors.scss";

$card-border-radius: 0.75rem;

%fill-parent {
  width: 100%;
  height: 100%;
}

.card {

  aspect-ratio: 5/7;
  .js-tilt-glare {
    border-radius: $card-border-radius;
  }

  .tilter,
  .card__element,
  .overflow-container,
  .card__front,
  .card__back,
  .card__element svg,
  .card__element img {
    @extend %fill-parent;
    aspect-ratio: 5/7;
    border-radius: $card-border-radius;
  }

  .tilter {
    position: relative;
    transform: translate3d(-50%, -50%, 2%);
    border-radius: $card-border-radius;
  }

  .card__element {
    position: relative;
    transform-style: preserve-3d;
    transition-property: transform;
    transition-timing-function: ease-out;
    transition-duration: 0.3s;
    position: relative;
    transform: rotate3d(0,0,0,0);
    box-shadow: 0.25rem 0.25rem 2rem rgba(#000, 0.6);

    svg,
    img {
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      overflow: hidden;
      border-radius: $card-border-radius;
      object-fit: cover;
      width: 100%;
      height: 100%;
    }

    svg {
      z-index: 2;
    }

    .card__front,
    .card__back {
      position: absolute;
    }

    .card__front {
      transform: translateZ(1px);
    }

    .card__back {
      transform: rotate3d( 0, 1, 0, 0.5turn);
    }

    .card__type {
      position: absolute;
      width: 100%;
      top: 66%;
      left: 50%;
      text-align: center;
      font-family: sans-serif;
      font-size: 16px;
      background-color: colors.c('emphasis');
      padding-top: 0.325rem;
      padding-bottom: 0.325rem;
      transform: translate3d(-50%, -50%, 0) rotate3d(0, 0, 1, -11.2deg);
    }

    &.uncommon {
      .card-frame_svg__crown {
        fill: colors.c('uncommon');
      }
    }

    &.rare {
      .card-frame_svg__crown {
        fill: colors.c('rare');
      }
    }

    &.ltd {
      .card-frame_svg__crown {
        fill: colors.c('ltd');
      }
    }
  }

  .card__element {
    &.flipped {
      transform: rotate3d( 0, 1, 0, 180deg);
    }
  }
}
